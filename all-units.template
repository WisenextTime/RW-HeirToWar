#升级部分

[core]
selfRegenRate:0
maxShield:0
shieldRegen:0
energyMax:0
energyRegen:0
copyFrom:ROOT:技能内容.template,全局资源.template,ROOT:行天教阵营/临时buff.template,ROOT:铁锈共和国/全局效果.template
#,ROOT:血条模板.template
armourMinDamageToKeep:0
armour:0
transportSlotsNeeded: 2
isBuilding:false
fogOfWarSightRange: 15
@memory 能量1:float

@memory price:float
@memory 血量加:float
@memory 血量乘:float
@memory 回血加:float
@memory 回血乘:float
@memory 护盾加:float
@memory 护盾乘:float
@memory 回盾加:float
@memory 回盾乘:float
@memory 伤害乘:float
@memory 攻速加:float
@memory 速度加:float
@memory 速度乘:float
@memory 范围加:float
@memory 范围乘:float
@memory 视野加:float
@memory 视野乘:float

@memory 血量乘2:float
@memory 回血乘2:float
@memory 护盾乘2:float
@memory 回盾乘2:float
@memory 伤害乘2:float
@memory 速度乘2:float
@memory 范围乘2:float

@memory 单位类型:float
@memory 改良次数:float
#0默认 1生产建筑
@memory 初始血量加:float
@memory 初始血量乘:float
@memory 初始回血加:float
@memory 初始回血乘:float
@memory 初始护盾加:float
@memory 初始护盾乘:float
@memory 初始血盾比:float
@memory 初始回盾加:float
@memory 初始回盾乘:float
@memory 初始伤害乘:float
@memory 初始攻速加:float
@memory 初始速度加:float
@memory 初始速度乘:float
@memory 初始范围加:float
@memory 初始范围乘:float

@memory 不可升级:boolean

@memory globalAdd:float

@memory moveSpeed:float
@memory bee:float

@memory team:float

@memory teamTp:float

@memory control:unit

@memory 血量记录:float

@memory 怨气目标:unit

updateUnitMemory:"""
globalAdd=0"""
[attack]
maxAttackRange:0

[movement]
moveSpeed:0

[hiddenAction_初始修正]
#血盾比正为血变盾负为盾变血
autoTriggerOnEvent:created
requireConditional:if customTarget1.readUnitMemory('单位类型',type='float')==1 and customTarget1.readUnitMemory('改良次数',type='float')>0 and not self.tags(includes='不知道')
setUnitMemory:"""
初始血量加=customTarget1.readUnitMemory('初始血量加',type='float'),
初始血量乘=customTarget1.readUnitMemory('初始血量乘',type='float'),
初始回血加=customTarget1.readUnitMemory('初始回血加',type='float'),
初始回血乘=customTarget1.readUnitMemory('初始回血乘',type='float'),
初始护盾加=customTarget1.readUnitMemory('初始护盾加',type='float'),
初始护盾乘=customTarget1.readUnitMemory('初始护盾乘',type='float'),
初始血盾比=customTarget1.readUnitMemory('初始血盾比',type='float'),
初始回盾加=customTarget1.readUnitMemory('初始回盾加',type='float'),
初始回盾乘=customTarget1.readUnitMemory('初始回盾乘',type='float'),
初始伤害乘=customTarget1.readUnitMemory('初始伤害乘',type='float'),
初始攻速加=customTarget1.readUnitMemory('初始攻速加',type='float'),
初始速度加=customTarget1.readUnitMemory('初始速度加',type='float'),
初始速度乘=customTarget1.readUnitMemory('初始速度乘',type='float'),
初始范围加=customTarget1.readUnitMemory('初始范围加',type='float'),
初始范围乘=customTarget1.readUnitMemory('初始范围乘',type='float')"""
alsoTriggerAction:技能1

[action_等级]
text:当前等级 %{self.resource.level}
description:当前经验 %{self.resource.exp}/%{(self.resource.level+1)*memory.price}\n每级提高 10%血盾伤害 5%回血回盾\n攻击与防御分别每秒获取2%(+2‰/level)价值经验\n击杀敌人获得目标可继承经验\n三级和每五级可能习得一个特殊能力\n该单位可继承经验%{(self.resource.Rexp)+memory.price}
displayType:infoOnlyNoBox
isVisible:true
buildSpeed:0
pos:998
[hiddenAction_升级]
autoTrigger:if (self.resource.exp>=(self.resource.level+1)*memory.price and self.resource.exp<(self.resource.level+5)*9*memory.price) and not memory.不可升级 and memory.price!=0
addResourcesWithLogic:level=1,exp=-self.resource.level*memory.price
alsoTriggerAction:属性提升

[hiddenAction_升级x9]
autoTrigger:if (self.resource.exp>=(self.resource.level+5)*9*memory.price) and not memory.不可升级 and memory.price!=0
addResourcesWithLogic:level=9,exp=-(self.resource.level-4)*9*memory.price
alsoTriggerAction:属性提升

[hiddenAction_属性提升]
autoTrigger:true
setResourcesWithLogic:Mhp=self.maxHp,Msh=self.maxShield
setUnitStats:"""
maxHp=max(1,(1+memory.globalAdd)*(1+memory.血量乘2)*(1+memory.血量乘)*(${core.maxHp}+memory.血量加-max(0,memory.初始血盾比*${core.maxHp})-max(-${core.maxShield},min(0,memory.初始血盾比*${core.maxShield})))*(1+self.resource.level*0.1)),
maxShield=max(self.shield,max(0,(1+memory.globalAdd)*(1+memory.护盾乘2)*(1+memory.护盾乘)*(${core.maxShield}+memory.护盾加+min(${core.maxHp},max(0,memory.初始血盾比*${core.maxHp}))+min(0,memory.初始血盾比*${core.maxShield}))*(1+self.resource.level*0.1))),
shieldRegen=(1+memory.globalAdd)*(1+memory.回盾乘2)*(1+memory.回盾乘)*(${core.shieldRegen}+memory.回盾加+max(0,memory.初始血盾比*${core.maxHp}/12000))*(1+self.resource.level*0.05),
maxAttackRange=(1+memory.范围乘2)*(1+memory.范围乘)*(${attack.maxAttackRange}+memory.范围加),
moveSpeed=(memory.moveSpeed+memory.速度加)*(1+memory.速度乘2)*(1+memory.速度乘),
selfRegenRate=(1+memory.globalAdd)*(1+memory.回血乘2)*(1+memory.回血乘)*(${core.selfRegenRate}+memory.回血加)*(1+self.resource.level*0.05),
fogOfWarSightRange=(${core.fogOfWarSightRange}+memory.视野加)*(1+memory.视野乘)"""

alsoTriggerAction:血量提升,攻击变化
setUnitMemory:moveSpeed=${movement.moveSpeed}
#${newMoveSpeed}
[hiddenAction_攻击变化]
setUnitStats:"""
shootDamageMultiplier=(1+memory.globalAdd)*(1+memory.伤害乘2)*(1+memory.伤害乘)*(1+self.resource.level*0.1),
shootDelayMultiplier=1/(1+memory.攻速加)"""

[hiddenAction_血量提升]
setResourcesWithLogic:hp=max(self.hp*(self.maxHp/self.resource.Mhp),self.hp),shield=max(self.shield*(self.maxShield/self.resource.Msh),self.shield)
[hiddenAction_初始护盾满]
autoTrigger:if self.timeAlive(withinSeconds=0.1) and memory.初始血盾比>0
setResourcesWithLogic:shield=self.maxShield

[hiddenAction_防御经验]
autoTrigger:if self.hasTakenDamage(withinSeconds=1)
#autoTrigger:if numberOfUnitsInEnemyTeam( lessThan=1, withInRange=)
addResourcesWithLogic:exp=(memory.price/50)*(self.resource.level*0.1+1)*select(self.globalTeamTags(includes='学习1'),2,1)*select(self.globalTeamTags(includes='学习2'),2,1)*select(self.globalTeamTags(includes='学习3'),2,1)
alsoTriggerAction:防御经验扩展
[hiddenAction_防御经验扩展]
addResourcesWithLogic:exp=0
[hiddenAction_进攻经验]
autoTrigger:if self.isAttacking()
addResourcesWithLogic:exp=(memory.price/50)*(self.resource.level*0.1+1)*select(self.globalTeamTags(includes='学习1'),2,1)*select(self.globalTeamTags(includes='学习2'),2,1)*select(self.globalTeamTags(includes='学习3'),2,1)
alsoTriggerAction:进攻经验扩展
[hiddenAction_进攻经验扩展]
addResourcesWithLogic:exp=0
[decal_等级1]
@define f=1
isVisible:if self.resource.level>=1
image:ROOT:全局/数字.png
imageScale:1.5
alwayStartDirAtZero:true
onlyWhileAlive:true
frame:int(((self.resource.level)%${f*10})/${f})
frame_width:3
frame_height:5
yOffsetAbsolute:${core.radius}*1.1
xOffsetAbsolute:${core.radius}*1.1
layer:beforeUI
order:4
[decal_1十]
isVisible:if self.Resource.level>=10
@copyFromSection:decal_等级1
@define f:10
xOffsetAbsolute:${core.radius}*1.1-5.5

[decal_1百]
isVisible:if self.Resource.level>=100
@copyFromSection:decal_等级1
@define f:100
xOffsetAbsolute:${core.radius}*1.1-11

[decal_1千]
isVisible:if self.Resource.level>=1000
@copyFromSection:decal_等级1
@define f:1000
xOffsetAbsolute:${core.radius}*1.1-16.5
#等每个单位都写价值变量就不需要这个愚蠢的价值设定了
[hiddenAction_全局创建触发]
autoTriggerOnEvent:created
setUnitMemory:price=${core.price}
sendMessageTo:customTarget1
sendMessageWithTags:created
sendMessageWithData:exp=memory.price*0.1
[hiddenAction_转换修改]
autoTrigger:if self.lastConverted(withInSeconds=2)
setUnitMemory:price=${core.price}
#
[hiddenAction_全局创建接收]
autoTriggerOnEvent:newMessage(withTag='created')
requireConditional:if memory.unique[200]
addResourcesWithLogic:exp=eventData('exp',type='float')*2,Rexp=eventData('exp',type='float')
[hiddenAction_全局死亡触发]
autoTriggerOnEvent:destroyed
alsoTriggerAction:死亡经验,死亡价值,蔓延,战损得分
[hiddenAction_死亡经验]
sendMessageTo:lastDamagedBy
sendMessageWithTags:exp
sendMessageWithData:exp=memory.price+self.resource.Rexp,Rexp=memory.price+self.resource.Rexp
[hiddenAction_死亡价值]
sendMessageTo:lastDamagedBy
sendMessageWithTags:credit
sendMessageWithData:credit=memory.price

[hiddenAction_正常获得经验]
autoTriggerOnEvent:newMessage(withTag='exp')
requireConditional:if not self.tags(includes='不知道')
addResourcesWithLogic:exp=eventData('exp',type='float'),Rexp=eventData('Rexp',type='float')
[hiddenAction_赏金猎人经济]
autoTriggerOnEvent:newMessage(withTag='credit')
requireConditional:if (not self.tags(includes='不知道')) and (memory.unique[32])
addResourcesWithLogic:credits=eventData('credit',type='float')/20

[resource_Rexp]
displayName:Rexp

[resource_exp]
displayName:exp

[resource_level]
displayName:level

[resource_馈赠]
hidden:true

[resource_Mhp]
displayName:Mhp
[resource_Msh]
displayName:Msh

[resource_unique]
displayName:unique
#统计区
[global_resource_友方势力]
hidden:true
[global_resource_战争分数]
displayName:得分
hidden:false
displayTextAppendResource:贡献点数
displayRoundedDown:true
[global_resource_贡献点数]
displayName:功勋
iconImage:ROOT:全局/荣誉勋章.png
displayTextPrefix:
hidden:true
[hiddenAction_击杀得分]
autoTriggerOnEvent:newMessage(withTag='credit')
#requireConditional:if (not self.tags(includes='不知道')) and (memory.unique[32])
addResourcesWithLogic:战争分数=eventData('credit',type='float')*0.8
[hiddenAction_战损得分]
requireConditional:if eventSource!=self
addResourcesWithLogic:战争分数=memory.price*0.2


#生存模式
[global_resource_levelS]
displayName:生存等级
hidden:true
displayRoundedDown:true

[hiddenAction_生存强化]
autoTrigger:if self.resource.level==0 and self.globalTeamTags(includes='生存模式')
addResourcesWithLogic:level=(self.resource.levelS)

#协同怨气
"""
[hiddenAction_协同怨气]
takeResources_maxUnits:50
takeResources_searchOnly:true
takeResources_includeUnitsWithinRange_team:allyNotOwn
takeResources_includeUnitsWithinRange:99999
takeResources_excludeUnitsWithoutTags:失落侵染全局
takeResources_triggerActionForEach:发送怨气

[hiddenAction_发送怨气]
sendMessageTo:thisActionTarget
sendMessageWithTags:协同怨气
sendMessageWithData:soul=memory.price
"""
[hiddenAction_发送怨气]
autoTriggerOnEvent:destroyed
takeResources_searchOnly:true
takeResources_includeUnitsWithinRange:1000000
takeResources_includeUnitsWithinRange_team:allyNotOwn
takeResources_excludeUnitsWithoutTags:灵魂晶
takeResources_triggerActionForEach:发送怨气2
alsoTriggerAction:发送怨气3

[hiddenAction_发送怨气2]
requireConditional:if memory.怨气目标==null or distanceBetweenSquared(self,thisActionTarget) < distanceBetweenSquared(self,memory.怨气目标)
setUnitMemory:怨气目标=thisActionTarget

[hiddenAction_发送怨气3]
sendMessageTo: memory.怨气目标
sendMessageWithTags:soul
sendMessageWithData:soul=memory.price

#蚀壤蔓延
[hiddenAction_蔓延]
takeResources_maxUnits:999
takeResources_searchOnly:true
takeResources_includeUnitsWithinRange_team:any
takeResources_includeUnitsWithinRange:100
takeResources_excludeUnitsWithoutTags:蚀壤
takeResources_triggerActionForEach:发送蔓延

[hiddenAction_发送蔓延]
requireConditional:if not self.tags(includes='地块')
sendMessageTo:thisActionTarget
sendMessageWithTags:蔓延
sendMessageWithData:nut=select(int(self.maxHp/200) <1,1,int(self.maxHp/200))
[hiddenAction_建筑物标签添加]
autoTrigger:if ${core.isBuilding}
temporarilyAddTags:建筑物
#侵蚀
[resource_侵蚀碎片]
hidden:true
[resource_侵蚀豁免]
hidden:true
[hiddenAction_侵蚀获取02]
autoTriggerOnEvent:newMessage(withTag='侵蚀')
requireConditional:if not self.tags(includes='侵蚀免疫')
addResourcesWithLogic:侵蚀碎片=eventData('hate',type='float')
[hiddenAction_侵蚀消退]
autoTrigger:if self.resource.侵蚀碎片!=0
setResourcesWithLogic:侵蚀碎片=max(0,min(100,self.resource.侵蚀碎片-1))
[action_侵蚀显示]
pos:20
isVisible:if self.resource.侵蚀碎片 > 0
iconImage:ROOT:全局/侵染/污染.png
buildSpeed:1s
text:侵蚀：%{int(self.resource.侵蚀碎片/5)}/100层
description:当被侵染单位攻击或击杀侵染单位/处于蚀域之中时，获得获得侵蚀层数\n身上每存在1层侵蚀效果，在被攻击时就会额外扣除0.5‰的血量\n侵蚀效果会随着时间消退，确保你处于干净的区域！
allowMultipleInQueue: true
[hiddenAction_侵蚀扣血]
autoTrigger:if self.hasTakenDamage(withinSeconds=1)
addResourcesWithLogic:hp=-int(self.maxHp*self.resource.侵蚀碎片*0.0001)
#盾卫效果
[resource_盾卫]
hidden:true
[hiddenAction_盾卫守护]
autoTrigger:if self.numberOfUnitsInAllyTeam(withTag="盾卫",greaterThan=0,withinRange=200) and not self.hasTags(includes="盾卫") and self.resource.盾卫 <1 or self.numberOfUnitsInTeam(withTag="盾卫",greaterThan=0,withinRange=200) and not self.hasTags(includes="盾卫") and self.resource.盾卫 <1 
#setUnitStats:armour=1000000
setResourcesWithLogic:盾卫=1
setUnitMemory:血量记录=self.hp
[hiddenAction_盾卫消失]
autoTrigger:if not self.numberOfUnitsInAllyTeam(withTag="盾卫",greaterThan=0,withinRange=200) and not self.numberOfUnitsInTeam(withTag="盾卫",greaterThan=0,withinRange=200) and self.resource.盾卫 >0 
#setUnitStats:armour=${core.armour}
setResourcesWithLogic:盾卫=0
[hiddenAction_盾卫被打]
autoTriggerOnEvent:tookDamage
requireConditional:if self.resource.盾卫 >0
sendMessageTo:nearestUnit(withinRange=200, withTag='盾卫',relation='ally')
sendMessageWithTags:受伤
sendMessageWithData:damage=memory.血量记录 - self.hp
alsoTriggerAction:盾卫复原
[hiddenAction_盾卫复原]
setUnitStats:hp=memory.血量记录


[hiddenAction_传教锚定]
autoTriggerOnEvent:newMessage(withTag="传教")
setUnitMemory:teamTp=eventData('faith',type='float')


#心控 & 传送门

[hiddenAction_确定初始队伍]
autoTrigger:if memory.control==null and self.teamId!=-1
setUnitMemory:team=self.teamId

[hiddenAction_确定心控]
autoTriggerOnEvent:tookDamage(withTag='策反')
setUnitMemory:control=eventSource
sendMessageTo:eventSource
sendMessageWithTags:心控成功
switchToTeam:eventSource.teamId
requireConditional:if not self.tags(includes='反心控') and not self.tags(includes='免疫debuff')

[hiddenAction_确认心控青春版]
@copyFromSection: hiddenAction_确定心控
autoTriggerOnEvent:tookDamage(withTag='策反青春版')
requireConditional:if not self.tags(includes='反心控') and not self.tags(includes='免疫debuff') and self.hp < self.maxHp * 0.5

[hiddenAction_复位]
autoTrigger:if memory.control.hp<=0 and not self.hasParent(withTag='传送载体') and not self.hasTags(includes="传送门") and self.teamId!=-1
switchToTeam:memory.team
setUnitMemory:control=null

[hiddenAction_取消心控]
autoTriggerOnEvent:newMessage(withTag='取消心控')
setUnitMemory:control=null

[decal_心控源链接]
isVisible:if memory.control != null
drawLineTo: memory.control
lineWidth: 5
onlyWhileAlive: true

[hiddenAction_传送标签]
autoTrigger:if not self.hasTags(includes="传送门") and not self.hasParent(withTag='传送载体')
temporarilyAddTags:允许传送

[hiddenAction_传送不包含]
autoTrigger:if self.hasParent(withTag='传送载体')
temporarilyRemoveTags:允许传送

#磷火相关
[resource_磷火]
hidden:true

[hiddenAction_磷火检测]
autoTrigger: if self.resource.磷火 > 0
alsoTriggerAction:磷火修正, 磷火状态, 磷火消逝, 磷火传染

[hiddenAction_磷火修正]
requireConditional:if self.resource.磷火 > 50
setResourcesWithLogic: 磷火 = 50

[action_磷火状态]
text:磷火烧灼
isLocked:true
isLockedMessage:%{self.resource.磷火}
isVisible:if self.resource.磷火 > 0
requireConditional:if self.hp < self.maxHp*0.9
addResourcesWithLogic:hp = - self.resource.磷火
spawnEffects:磷火*10

[hiddenAction_磷火消逝]
requireConditional:if (self.hp >= self.maxHp*0.9 or self.isInWater() or self.tags(includes='免疫debuff')) and self.resource.磷火>0
setResourcesWithLogic: 磷火=0

[hiddenAction_磷火传染]
requireConditional:if self.hp < self.maxHp*0.5
takeResources: 磷火=-5
takeResources_maxUnits:1000
takeResources_discardCollected:true
takeResources_includeUnitsWithinRange: 200
takeResources_includeUnitsWithinRange_team:any

[effect_磷火]
image:ROOT:暗夜军\陆军\T3\磷火坦克\磷火.png
xOffsetAbsoluteRandom:${core.radius}
yOffsetAbsoluteRandom:${core.radius}
ySpeedAbsolute:-1
life:60

[resource_融毁]
hidden:true

[hiddenAction_接收融毁]
autoTriggerOnEvent:tookDamage(withTag='融毁')
setResourcesWithLogic:融毁=min(5,self.resource.融毁) 

[hiddenAction_融毁解除]
autoTrigger:if self.resource.融毁 > 0
addResources:融毁=-1

[hiddenAction_融毁扣血]
autoTriggerOnEvent:tookDamage
addResourcesWithLogic=hp=-10*self.resource.融毁

[action_等级调试+1]
text:等级+1
description:等级+1
isVisible:if self.hasUnitInTeam(withTag='沙盒调试',withinRange=300) or numberOfUnitsInEnemyTeam(withTag='沙盒调试',withinRange=300,greaterThan=0)
addResourcesWithLogic:exp=(self.resource.level+1)*memory.price,Rexp=(self.resource.level+1)*memory.price
buildSpeed:0
pos:1000.1
[action_等级调试+3]
text:等级+3
description:等级+3
isVisible:if self.hasUnitInTeam(withTag='沙盒调试',withinRange=300) or numberOfUnitsInEnemyTeam(withTag='沙盒调试',withinRange=300,greaterThan=0)
addResourcesWithLogic:exp=(self.resource.level+2)*3*memory.price,Rexp=(self.resource.level+2)*3*memory.price
buildSpeed:0
pos:1000.1
[action_等级调试+5]
text:等级+5
description:等级+5
isVisible:if self.hasUnitInTeam(withTag='沙盒调试',withinRange=300) or numberOfUnitsInEnemyTeam(withTag='沙盒调试',withinRange=300,greaterThan=0)
addResourcesWithLogic:exp=(self.resource.level+3)*5*memory.price,Rexp=(self.resource.level+3)*5*memory.price
buildSpeed:0
pos:1000.1